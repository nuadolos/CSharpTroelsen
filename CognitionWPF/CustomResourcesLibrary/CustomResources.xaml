<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CustomResourcesLibrary">
    
    <!--Ресурсы приложения хранятся в библиотеке ресурсов-->

    <RadialGradientBrush x:Key="CustomBruhesBorder">
        <GradientStop Color="MediumPurple" Offset="0.2"/>
        <GradientStop Color="PaleGreen" Offset="0.5"/>
        <GradientStop Color="Pink" Offset="0.1"/>
    </RadialGradientBrush>
    
    <!--Шаблон для элемента управления Button 
        (В качестве примера вынесен из стиля NewTemplateButton)
    
            Разметка {TemplateBinding} захватывает настройки свойств,
            которые определены элементом управления (Например, Content)
    
            <ContentPresenter> является аналогом <TextBlock Text="{TemplateBinding Content}/>",
            но нужно учесть, что он не определяет некоторые свойства (Например, Foreground)-->

    <ControlTemplate x:Key="TemplateButton" TargetType="Button">
        <Grid RenderTransformOrigin="0.5, 0.5">
            <Rectangle Fill="{TemplateBinding Background}" Stroke="{StaticResource CustomBruhesBorder}"
                                   RadiusX="10" RadiusY="10"
                                   x:Name="SurfaceBtn"/>
            <TextBlock Text="{TemplateBinding Content}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   x:Name="CaptionBtn"/>
            <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>-->

            <Grid.RenderTransform>
                <RotateTransform x:Name="RotateBtn" Angle="0"/>
            </Grid.RenderTransform>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="SurfaceBtn" Property="Fill" Value="#FFDAC4AB"/>
                <Setter TargetName="CaptionBtn" Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="SurfaceBtn" Property="Stroke" Value="#FF42F9C3"/>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="360" Duration="0:0:2"
                                            Storyboard.TargetName="RotateBtn" Storyboard.TargetProperty="Angle"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Стиль для каждого элемента управления Button,
        т.к. не указан x:key
        Чтобы убрать данный стиль необходимо свойству Style
        присвоить значение {x:Null}-->

    <Style TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="175"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!--Стиль для любого элемента управления
        безошибочно работает и просто игнорирует недостающиеся свойства-->

    <Style x:Key="BasicControlStyle">
        <Setter Property="Control.Height" Value="30"/>
        <Setter Property="Control.Width" Value="175"/>
        <Setter Property="Control.Margin" Value="10"/>
    </Style>

    <!--Стиль, основанный на BasicControlStyle,
        т.е. наследует его уже заполненные Setters-->

    <Style x:Key="AgressiveButton" TargetType="Button"
           BasedOn="{StaticResource BasicControlStyle}">
        <Setter Property="Background" Value="#FFAF2121"/>
        <Setter Property="BorderBrush" Value="#FF944646"/>
        <Setter Property="BorderThickness" Value="2"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF4C1010"/>
                <Setter Property="BorderBrush" Value="#FF5F2E2E"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="IsVisible" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Cursor" Value="AppStarting"/>
            </MultiTrigger>

            <Trigger Property="IsMouseCaptured" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Width">
                            <DoubleAnimation From="175" To="300"
                                             Duration="0:0:2" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Height">
                            <DoubleAnimation From="30" To="100"
                                             Duration="0:0:2" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Стиль для элемента управления Button
        с собственным шаблоном-->

    <Style TargetType="Button" x:Key="NewTemplateButton"
           BasedOn="{StaticResource BasicControlStyle}">
        <Setter Property="Template" Value="{StaticResource TemplateButton}"/>
    </Style>
</ResourceDictionary>
